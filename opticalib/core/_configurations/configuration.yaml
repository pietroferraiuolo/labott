SYSTEM:
  data_path: ''
  simulated.devices:
    dm: true
    interf: false
    interferometer: true
    accelerometers: true
    angleRotator: true
    m4Exapode: true
    dp: true
    parSlider: true
    par: true
    rmSlider: true
    rm: true
    tempSensors: true
DEVICES:
  INTERFEROMETER:
    PhaseCam4020:
      ip: 193.206.155.78
      port: 8011
      Paths:
        settings: /home/m4/4dConfig/AppSettings.ini
        copied_settings: 4DSettings.ini
        capture_4dpc: D:/M4/Capture
        produce_4dpc: D:/M4/Produced
        produce: /home/m4/4d/M4/Produced
    AccuFizAO:
      ip: 193.206.155.218
      port: 8011
      Paths:
        settings: /home/labot/Shared4DFolders/AccuFizAOConfig/AppSettings.ini
        copied_settings: 4DSettings.ini
        capture_4dpc: C:/Data/Capture
        produce_4dpc: C:/Data/Produced
        produce: /home/labot/Shared4DFolders/AccuFizAOData/Produced
  DEFORMABLE.MIRRORS:
    AlpaoXXX:
      ip:
      port:
      diameter:
    Splatt:
      ip: 193.206.155.220
      port: 9090

INFLUENCE.FUNCTIONS:
  DM:
    nacts: 88
    timing: 1
    delay: 0.0
    triggeredMode: # if not using triggerMode, put false and comment next 2 lines
      frequency: 5.
      cmdDelay: 0.0
  TRIGGER:
    numberofzeros: 0
    modeid: []
    modeamp: 0.05
    template: []
    modalbase: hadamard
  REGISTRATION:
    numberofzeros: 0
    modeid: []
    modeamp: 0.1
    template: []
    modalbase: zonal
  IFFUNC:
    numberofzeros: 0
    modeid: np.arange(0,88,1)
    modeamp: 0.05
    template: [1, -1, 1]
    modalbase: hadamard

STITCHING:
  pixel_scale: 0.09095 # mm/px
  alpha: 0 # degrees
  starting_coords: [0, 0] # motors position in mm
  home_coords: [0, 0] # motors position in mm

# Filled, as example, with M4 OTT configuration
SYSTEM.ALIGNMENT:
  names:
  - Parabola
  - Reference Mirror
  - M4 Exapode

  devices_move_calls:
  - parabola.setPosition
  - referenceMirror.setPosition
  - m4Exapode.setPosition

  devices_read_calls:
  - parabola.getPosition
  - referenceMirror.getPosition
  - m4Exapode.getPosition

  ccd_acquisition:
  - acquire_map

  devices_dof: 6

  dof:
  - [2, 3, 4]        # Parabola DoF
  - [3, 4]           # Reference Mirror DoF
  - [3, 4]           # M4 Exapode DoF

  slices:
    # Parabola
  - start: 0
    stop: 3
    # Reference Mirror
  - start: 3
    stop: 5
    # M4 Exapode
  - start: 5
    stop: 7

  zernike_to_use: [1, 2, 3, 6, 7]
  push_pull_template: [1, -2, 1]
  commandMatrix: ottCmdMat.fits
  fitting_surface: ''
